plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.0'
	id 'io.spring.dependency-management' version '1.1.0'
	id 'idea'
	id 'com.google.protobuf' version "0.9.1"
	id 'org.graalvm.buildtools.native' version '0.9.22'
}

group = 'dgrubjesic.omni'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'

	implementation 'org.springframework.boot:spring-boot-starter-rsocket'
	implementation 'org.springframework.kafka:spring-kafka'

	implementation 'io.projectreactor.tools:blockhound:1.0.8.RELEASE'
	implementation 'io.projectreactor:reactor-core-micrometer:1.0.6'


	compileOnly 'org.projectlombok:lombok'

	implementation 'org.mapstruct:mapstruct:1.5.5.Final'

	annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'
	annotationProcessor 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok-mapstruct-binding:0.2.0'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'io.projectreactor:reactor-test'
	testImplementation 'org.springframework.kafka:spring-kafka-test'

	implementation 'com.google.protobuf:protobuf-java:3.23.1'
}

tasks.named('test') {
	useJUnitPlatform()
}

protobuf {
	protoc {
		artifact = 'com.google.protobuf:protoc:3.21.9'
	}

	generatedFilesBaseDir = "$projectDir/src/generated"
}

idea {
	module {
		sourceDirs += file("src/main/proto")
		sourceDirs += file("src/generated/main/java")

		generatedSourceDirs += file('src/generated/main/java')
	}
}

clean {
	delete 'src/generated/main'
}

