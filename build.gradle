plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.0'
    id 'io.spring.dependency-management' version '1.1.0'
    id 'idea'
    id 'com.google.protobuf' version '0.9.2'
}

group = 'dgrubjesic.omni'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
    mavenLocal()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-r2dbc'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    implementation 'org.springframework.security:spring-security-crypto:6.1.0'

    implementation 'org.flywaydb:flyway-core'
    implementation 'io.hypersistence:tsid:1.1.0'

    implementation 'com.google.protobuf:protobuf-javalite:3.22.2'
    implementation 'com.google.protobuf:protobuf-gradle-plugin:0.9.2'

    compileOnly 'org.projectlombok:lombok'
    compileOnly 'com.google.protobuf:protoc:3.23.1'

    runtimeOnly 'org.postgresql:r2dbc-postgresql'

    implementation 'org.mapstruct:mapstruct:1.5.5.Final'

    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'
    annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok-mapstruct-binding:0.2.0'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'io.projectreactor:reactor-test'

}

tasks.named('test') {
    useJUnitPlatform()
}

protobuf {
    protoc {
        artifact = 'com.google.protobuf:protoc:3.21.9'
    }
}

idea {
    module {
        generatedSourceDirs += file('src/generated/main/java')
    }
}