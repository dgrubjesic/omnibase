plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.0'
    id 'io.spring.dependency-management' version '1.1.0'
    id 'idea'
    id 'com.google.protobuf' version "0.9.1"

}

group = 'com.dgrubjesic.omnibase'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-rsocket'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.mapstruct:mapstruct:1.5.5.Final'
    implementation 'io.micrometer:micrometer-core:1.11.0'

    implementation project(':shared')

    implementation 'com.google.protobuf:protobuf-java:3.23.1'
    implementation 'com.google.protobuf:protobuf-parent:4.0.0-rc-2'
    implementation 'io.rsocket.rpc:rsocket-rpc-core:0.3.0'

    compileOnly 'org.projectlombok:lombok'

    annotationProcessor 'javax.annotation:javax.annotation-api:1.3.2'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'
    annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok-mapstruct-binding:0.2.0'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.boot:spring-boot-testcontainers'
    testImplementation 'io.projectreactor:reactor-test'
    testImplementation 'org.testcontainers:junit-jupiter'
}

tasks.named('test') {
    useJUnitPlatform()
}

protobuf {
    protoc {
        artifact = 'com.google.protobuf:protoc:3.6.1'
    }

    plugins {
        rsocketRpc {
            artifact = 'io.rsocket.rpc:rsocket-rpc-protobuf:0.3.0'
        }
    }
    generateProtoTasks {
        all()*.plugins {
            rsocketRpc {}
        }
    }
}

// If you use Intellij add this so it can find the generated classes
idea {
    module {
        sourceDirs += file("src/main/proto")
        sourceDirs += file("src/generated/main/java")
        sourceDirs += file("src/generated/main/rsocketRpc")

        generatedSourceDirs += file('src/generated/main/java')
        generatedSourceDirs += file('src/generated/main/rsocketRpc')
    }
}

// clean generated code
clean {
    delete 'src/generated/main'
}
